<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.ExceptionalBots="[{}]" this:Main.ConfigFilePath="C:\Users\praveenraj sivaraja\Documents\Project\Support\Data\DataConfig.json" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:aa="clr-namespace:AddOns.Adapter;assembly=AddOns" xmlns:ac="clr-namespace:AddOns.Convertor;assembly=AddOns" xmlns:aw="clr-namespace:AddOns.Web;assembly=AddOns" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Name Of the Process To Be Executed" Name="Process" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Default SPA Credential " Name="Credential" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Enter The UserName" Name="UserName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Enter The Password" Name="Password" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Enter The Action To Be Executed" Name="Execute" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Enter The Excel Sheet Name" Name="SheetName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Enter The Excel File Path" Name="ExcelFilePath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Enter The Note Pad File Path " Name="NotePadFilePath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Enter The Tab On Which The Process Is To Be Executed" Name="ExecutionTab" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Enter The Number Of Bot" Name="NumberOfBots" Type="InArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="Enter The Agency Sequenec" Name="AgencySequence" Type="InArgument(x:String)" />
    <x:Property Name="ExceptionalBots" Type="InArgument(s:String[])" />
    <x:Property Name="PageNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="EndMonth" Type="InArgument(x:String)" />
    <x:Property Name="TriggerName" Type="InArgument(x:String)" />
    <x:Property Name="ConfigFilePath" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Enter The Filter To Be Searched" Name="SearchFor" Type="InArgument(x:String)" />
    <x:Property Name="Action" Type="InArgument(x:String)" />
  </x:Members>
  <this:Main.Credential>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.Credential>
  <this:Main.UserName>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.UserName>
  <this:Main.Password>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.Password>
  <this:Main.Execute>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.Execute>
  <this:Main.SheetName>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.SheetName>
  <this:Main.ExcelFilePath>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.ExcelFilePath>
  <this:Main.NotePadFilePath>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.NotePadFilePath>
  <this:Main.Action>
    <InArgument x:TypeArguments="x:String" />
  </this:Main.Action>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1353,4030</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="96">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>AddOns.Adapter</x:String>
      <x:String>System.Speech.Synthesis</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Speech</x:String>
      <x:String>GetterSetterActivity.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>AddOns.Convertor</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>AddOns.Web</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="82">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>AddOns</AssemblyReference>
      <AssemblyReference>System.Speech</AssemblyReference>
      <AssemblyReference>Text-To-Speech</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>GetterSetterActivity</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Support" sap:VirtualizedContainerService.HintSize="1047,3965" sap2010:WorkflowViewState.IdRef="Sequence_10">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
      <Variable x:TypeArguments="ui:Browser" Name="BrowserTab" />
      <Variable x:TypeArguments="njl:JObject" Name="JsonConfig" />
      <Variable x:TypeArguments="ss:SecureString" Name="SecuredPassword" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1005,3873" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <TryCatch.Try>
        <Sequence DisplayName="Support Process" sap:VirtualizedContainerService.HintSize="967,3646" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <aa:Should_Stop DisplayName="Should Stop" sap:VirtualizedContainerService.HintSize="925,22" sap2010:WorkflowViewState.IdRef="Should_Stop_4" ShouldStop="[ShouldStop]" />
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSetting workflow" sap:VirtualizedContainerService.HintSize="925,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="General\InitAllSetting.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="ConfigFilePath">[ConfigFilePath]</InArgument>
              <OutArgument x:TypeArguments="njl:JObject" x:Key="JsonConfig">[JsonConfig]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <If sap2010:Annotation.AnnotationText="If any of the path is missing the the default path will be assigned " Condition="[String.IsNullOrWhiteSpace(ExcelFilePath) Or String.IsNullOrWhiteSpace(NotePadFilePath)]" sap:VirtualizedContainerService.HintSize="925,108" sap2010:WorkflowViewState.IdRef="If_36">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_11">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[ExcelFilePath]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[JsonConfig("ExcelFilePath").ToString]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[NotePadFilePath]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">[JsonConfig("NotePadFilePath").ToString]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
              </ui:MultipleAssign>
            </If.Then>
          </If>
          <If Condition="[Not ShouldStop]" sap:VirtualizedContainerService.HintSize="925,3061" sap2010:WorkflowViewState.IdRef="If_16">
            <If.Then>
              <Sequence DisplayName="Start Process" sap:VirtualizedContainerService.HintSize="680,2903" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Boolean" Name="IsExist" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="If the Process Name is Empty this will ask to select the process" DisplayName="While" sap:VirtualizedContainerService.HintSize="638,487" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                  <ui:InterruptibleWhile.Body>
                    <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,291" sap2010:WorkflowViewState.IdRef="InputDialog_6" IsPassword="False" Label="Process" OptionsString="SPA;Trigger;SelectData;Start/RestartBot" Title="Select the Process">
                      <ui:InputDialog.Result>
                        <OutArgument x:TypeArguments="x:String">[Process]</OutArgument>
                      </ui:InputDialog.Result>
                    </ui:InputDialog>
                  </ui:InterruptibleWhile.Body>
                  <ui:InterruptibleWhile.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="String.IsNullOrWhiteSpace(Process)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                  </ui:InterruptibleWhile.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InterruptibleWhile>
                <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[Process]" sap:VirtualizedContainerService.HintSize="638,2222" sap2010:WorkflowViewState.IdRef="Switch`1_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch x:Key="SPA" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="655,2658" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <Sequence DisplayName="SPA Process" sap:VirtualizedContainerService.HintSize="617,2431" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="ButtonStatus" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <aa:Should_Stop DisplayName="Should Stop" sap:VirtualizedContainerService.HintSize="575,22" sap2010:WorkflowViewState.IdRef="Should_Stop_1" ShouldStop="[ShouldStop]" />
                        <If sap2010:Annotation.AnnotationText="If credential is mussing the the default credential will be assigned" Condition="[String.IsNullOrWhiteSpace(UserName) Or String.IsNullOrWhiteSpace(Password)]" DisplayName="Checking Credential Exist" sap:VirtualizedContainerService.HintSize="575,551" sap2010:WorkflowViewState.IdRef="If_10">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Get Credential " sap:VirtualizedContainerService.HintSize="539,343" sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="497,51" sap2010:WorkflowViewState.IdRef="InputDialog_7" IsPassword="False" Label="Credential" OptionsString="SelectData;CareDimention" Title="Select Credential">
                                <ui:InputDialog.Result>
                                  <OutArgument x:TypeArguments="x:String">[Credential]</OutArgument>
                                </ui:InputDialog.Result>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InputDialog>
                              <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[Credential]" sap:VirtualizedContainerService.HintSize="497,160" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:MultipleAssign x:Key="SelectData" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[UserName]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[JsonConfig("SPACredentials")("SelectData")("UserName").ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[Password]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[JsonConfig("SPACredentials")("SelectData")("Password").ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                </ui:MultipleAssign>
                                <ui:MultipleAssign x:Key="CareDimention" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[UserName]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[JsonConfig("SPACredentials")("CareDimention")("UserName").ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[Password]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[JsonConfig("SPACredentials")("CareDimention")("Password").ToString]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                </ui:MultipleAssign>
                              </Switch>
                            </Sequence>
                          </If.Then>
                        </If>
                        <aw:Launch_Browser BrowserTab="[BrowserTab]" DisplayName="Launch Browser" sap:VirtualizedContainerService.HintSize="575,22" sap2010:WorkflowViewState.IdRef="Launch_Browser_1" Url="[{JsonConfig(&quot;SPAURL&quot;).ToString}]" />
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Launch And Login SPA workflow" sap:VirtualizedContainerService.HintSize="575,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="SPA\Login SPA.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="UserName">[UserName]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="Password">[Password]</InArgument>
                            <InOutArgument x:TypeArguments="ui:Browser" x:Key="SPABrowserTab">[BrowserTab]</InOutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Navigate to Process workflow" sap:VirtualizedContainerService.HintSize="575,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="SPA\Navigate to Process.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InOutArgument x:TypeArguments="ui:Browser" x:Key="SPABrowserTab">[BrowserTab]</InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="NavigateTo">process</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <If Condition="[PageNumber&gt;0]" sap:VirtualizedContainerService.HintSize="575,51" sap2010:WorkflowViewState.IdRef="If_45">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Pagination workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="SPA\Pagination.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="Action">Specefic</InArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="PageNumber">[PageNumber]</InArgument>
                                <InArgument x:TypeArguments="ui:Browser" x:Key="SPABrowserTab">[BrowserTab]</InArgument>
                                <OutArgument x:TypeArguments="x:Boolean" x:Key="ButtonStatus">[ButtonStatus]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                        </If>
                        <ui:AppendLine DisplayName="Append Line" FileName="[NotePadFilePath+&quot;SPA Running Status.txt&quot;]" sap:VirtualizedContainerService.HintSize="575,132" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="[now.ToString(&quot;dd/MM |  hh:mm&quot;)]" UseDefaultEncoding="False">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:AppendLine>
                        <ui:InterruptibleDoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="575,905" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
                          <ui:InterruptibleDoWhile.Body>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,740" sap2010:WorkflowViewState.IdRef="Sequence_13">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[PageNumber]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[PageNumber+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Trace" Message="[&quot;Gathering Details From Page Number: &quot;+PageNumber.ToString]" />
                              <aa:Should_Stop DisplayName="Should Stop" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Should_Stop_2" ShouldStop="[ShouldStop]" />
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Get RunningNow Status workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="SPA\Get Status.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InOutArgument x:TypeArguments="ui:Browser" x:Key="SPABrowserTab">[BrowserTab]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="EndMonth">[EndMonth]</InOutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Pagination workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="SPA\Pagination.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="Action">Next</InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="PageNumber" />
                                  <InArgument x:TypeArguments="ui:Browser" x:Key="SPABrowserTab">[BrowserTab]</InArgument>
                                  <OutArgument x:TypeArguments="x:Boolean" x:Key="ButtonStatus">[ButtonStatus]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <If Condition="[String.IsNullOrWhiteSpace(EndMonth) And Not EndMonth.Contains(&quot;Default&quot;)]" DisplayName="Checking The End Month " sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_46">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Trace" Message="[&quot;Reached the Month To Be Stoped &quot;]" />
                                    <ui:Break sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_6" />
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </ui:InterruptibleDoWhile.Body>
                          <ui:InterruptibleDoWhile.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="ButtonStatus" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                          </ui:InterruptibleDoWhile.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InterruptibleDoWhile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Logout Of SPA workflow" sap:VirtualizedContainerService.HintSize="575,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="SPA\Logout Of SPA.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InOutArgument x:TypeArguments="ui:Browser" x:Key="SPABrowserTab">[BrowserTab]</InOutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="621,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Error" Message="[exception.Source+vbNewLine+exception.Message]" />
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                  <Sequence x:Key="SelectData" DisplayName="SelectData Process" sap:VirtualizedContainerService.HintSize="480,1789" sap2010:WorkflowViewState.IdRef="Sequence_16">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="IsLoggedIn" />
                      <Variable x:TypeArguments="x:String" Name="Action" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <aa:Should_Stop DisplayName="Should Stop" sap:VirtualizedContainerService.HintSize="438,22" sap2010:WorkflowViewState.IdRef="Should_Stop_3" ShouldStop="[ShouldStop]" />
                    <Sequence DisplayName="User Input " sap:VirtualizedContainerService.HintSize="438,66" sap2010:WorkflowViewState.IdRef="Sequence_44">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If sap2010:Annotation.AnnotationText="If credential is mussing the the default credential will be assigned" Condition="[String.IsNullOrWhiteSpace(UserName) Or String.IsNullOrWhiteSpace(Password)]" DisplayName="Getting Default Credential From Config " sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="If_12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[UserName]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[JsonConfig("SelectDataCredential")("UserName").ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[Password]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[JsonConfig("SelectDataCredential")("Password").ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                        </If.Then>
                      </If>
                      <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="If SubTask is not declared it will ask for the inout " DisplayName="While" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
                        <ui:InterruptibleWhile.Body>
                          <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,291" sap2010:WorkflowViewState.IdRef="InputDialog_8" IsPassword="False" Label="SubTask" OptionsString="Document Retrieval;Incomplete HCHB" Title="Select the SubTask">
                            <ui:InputDialog.Result>
                              <OutArgument x:TypeArguments="x:String">[ExecutionTab]</OutArgument>
                            </ui:InputDialog.Result>
                          </ui:InputDialog>
                        </ui:InterruptibleWhile.Body>
                        <ui:InterruptibleWhile.Condition>
                          <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="String.IsNullOrWhiteSpace(ExecutionTab)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                        </ui:InterruptibleWhile.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InterruptibleWhile>
                      <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="If the Process name is not assigned then get the input " DisplayName="While" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_4">
                        <ui:InterruptibleWhile.Body>
                          <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,291" sap2010:WorkflowViewState.IdRef="InputDialog_9" IsPassword="False" Label="Process Name" OptionsString="Get Count;Get Patient Id;Lock/UnLock Records" Title="Process To Execute">
                            <ui:InputDialog.Result>
                              <OutArgument x:TypeArguments="x:String">[Execute]</OutArgument>
                            </ui:InputDialog.Result>
                          </ui:InputDialog>
                        </ui:InterruptibleWhile.Body>
                        <ui:InterruptibleWhile.Condition>
                          <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="String.IsNullOrWhiteSpace(Execute)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                        </ui:InterruptibleWhile.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InterruptibleWhile>
                      <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="If Excel Sheet name is missing then will ask for Sheet Name" DisplayName="While" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_5">
                        <ui:InterruptibleWhile.Body>
                          <Sequence DisplayName="Assigning Default Value" sap:VirtualizedContainerService.HintSize="663,540" sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[ExecutionTab.Contains(&quot;Incomplete HCHB&quot;) or Execute.Contains(&quot;Lock/UnLock Records&quot;)]" sap:VirtualizedContainerService.HintSize="856,300" sap2010:WorkflowViewState.IdRef="If_27">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="242,143" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[Execute.Contains(&quot;Lock/UnLock Records&quot;)]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_26">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[SheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">PatientId</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                    <If.Else>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[SheetName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">HCHB</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InputDialog_10" IsPassword="False" Label="Sheet Name" OptionsString="Agency;Today" Title="Select Excel Sheet">
                                  <ui:InputDialog.Result>
                                    <OutArgument x:TypeArguments="x:String">[SheetName]</OutArgument>
                                  </ui:InputDialog.Result>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InputDialog>
                              </If.Else>
                            </If>
                          </Sequence>
                        </ui:InterruptibleWhile.Body>
                        <ui:InterruptibleWhile.Condition>
                          <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="String.IsNullOrWhiteSpace(SheetName)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                        </ui:InterruptibleWhile.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InterruptibleWhile>
                      <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="If the process is Lock/Unlock Records thi will check whether the Action exist or not of now will ask for the value" DisplayName="While" sap:VirtualizedContainerService.HintSize="200,138" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_6">
                        <ui:InterruptibleWhile.Body>
                          <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,291" sap2010:WorkflowViewState.IdRef="InputDialog_11" IsPassword="False" Label="Lock / Open" OptionsString="Lock;Open" Title="Select the Action ">
                            <ui:InputDialog.Result>
                              <OutArgument x:TypeArguments="x:String">[Action]</OutArgument>
                            </ui:InputDialog.Result>
                          </ui:InputDialog>
                        </ui:InterruptibleWhile.Body>
                        <ui:InterruptibleWhile.Condition>
                          <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="String.IsNullOrWhiteSpace(Action) And not String.IsNullOrWhiteSpace(Execute) and Execute.Equals(&quot;Lock/UnLock Records&quot;)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_3" />
                        </ui:InterruptibleWhile.Condition>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InterruptibleWhile>
                    </Sequence>
                    <aa:Close_All_Application DisplayName="Close All Application" Excel="True" sap:VirtualizedContainerService.HintSize="438,22" sap2010:WorkflowViewState.IdRef="Close_All_Application_1" NotePad="True" VisualBasicCode="True">
                      <aa:Close_All_Application.AWS>
                        <InArgument x:TypeArguments="x:Boolean" />
                      </aa:Close_All_Application.AWS>
                      <aa:Close_All_Application.Chrome>
                        <InArgument x:TypeArguments="x:Boolean" />
                      </aa:Close_All_Application.Chrome>
                      <aa:Close_All_Application.ClickUp>
                        <InArgument x:TypeArguments="x:Boolean" />
                      </aa:Close_All_Application.ClickUp>
                      <aa:Close_All_Application.Edge>
                        <InArgument x:TypeArguments="x:Boolean" />
                      </aa:Close_All_Application.Edge>
                      <aa:Close_All_Application.OpenVPN>
                        <InArgument x:TypeArguments="x:Boolean" />
                      </aa:Close_All_Application.OpenVPN>
                      <aa:Close_All_Application.Slack>
                        <InArgument x:TypeArguments="x:Boolean" />
                      </aa:Close_All_Application.Slack>
                      <aa:Close_All_Application.UipathStudio>
                        <InArgument x:TypeArguments="x:Boolean" />
                      </aa:Close_All_Application.UipathStudio>
                    </aa:Close_All_Application>
                    <aw:Launch_Browser BrowserTab="[BrowserTab]" DisplayName="Launch Browser" sap:VirtualizedContainerService.HintSize="438,22" sap2010:WorkflowViewState.IdRef="Launch_Browser_2" Url="[{JsonConfig(&quot;SelectDataURL&quot;).ToString}]" />
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LoginSelectData workflow" sap:VirtualizedContainerService.HintSize="438,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="SelectData\LoginSelectData.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="UserName">[UserName]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Password">[Password]</InArgument>
                        <InOutArgument x:TypeArguments="ui:Browser" x:Key="SDBrowserTab">[BrowserTab]</InOutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,51" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Select Home Page workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="SelectData\Select Home Page.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InOutArgument x:TypeArguments="ui:Browser" x:Key="SDBrowserTab">[BrowserTab]</InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="NavigateTo">Assessment Import</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Error" Message="[&quot;Login Page Not Exist &quot;]" />
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke NavigateTab workflow" sap:VirtualizedContainerService.HintSize="438,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="SelectData\NavigateTab.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InOutArgument x:TypeArguments="ui:Browser" x:Key="SDBrowserTAb">[BrowserTab]</InOutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ExecutionTab">[ExecutionTab]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Headder">Assessment</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Doc Retrival Search workflow" sap:VirtualizedContainerService.HintSize="438,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="SelectData\Activity\Search Agency.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="ExcelPath">[ExcelFilePath]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="SheetName">[SheetName]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Process">[Execute]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="OpenNotePad" />
                        <InArgument x:TypeArguments="ui:Browser" x:Key="SDBrowserTab">[BrowserTab]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Action">[Action]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ExecutionTab">[ExecutionTab]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="NotePadFilePath">[NotePadFilePath]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                  <ui:InterruptibleDoWhile x:Key="Start/RestartBot" sap:VirtualizedContainerService.HintSize="598,1972" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_3">
                    <ui:InterruptibleDoWhile.Body>
                      <Sequence DisplayName="Restart Bot" sap:VirtualizedContainerService.HintSize="562,1807" sap2010:WorkflowViewState.IdRef="Sequence_30">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="Bots" />
                          <Variable x:TypeArguments="s:String[]" Name="SplitBots" />
                          <Variable x:TypeArguments="x:String" Name="Count" />
                          <Variable x:TypeArguments="s:String[]" Default="[{}]" Name="CurrentBots" />
                          <Variable x:TypeArguments="x:String" Name="BotPrefix" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[String.IsNullOrWhiteSpace(Password) Or String.IsNullOrWhiteSpace(UserName)]" DisplayName="Getting Credential Assert" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="If_50">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Assign Credential" sap:VirtualizedContainerService.HintSize="326,233" sap2010:WorkflowViewState.IdRef="Sequence_45">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="ORC Credential" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[SecuredPassword]" Username="[UserName]" />
                              <ac:SecuredString_To_String_Convertor DisplayName="SecuredString To String Convertor" sap:VirtualizedContainerService.HintSize="284,22" sap2010:WorkflowViewState.IdRef="SecuredString_To_String_Convertor_2" SecuredString="[SecuredPassword]" StringOutPut="[Password]" />
                            </Sequence>
                          </If.Then>
                        </If>
                        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Json Convertion" sap:VirtualizedContainerService.HintSize="526,735" sap2010:WorkflowViewState.IdRef="Sequence_43">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If sap2010:Annotation.AnnotationText="If the Agency Sequrnce is not availabel then get the sequence from the config file" Condition="[String.IsNullOrWhiteSpace(AgencySequence)]" DisplayName="Default Data" sap:VirtualizedContainerService.HintSize="484,267" sap2010:WorkflowViewState.IdRef="If_44">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[AgencySequence]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[JsonConfig("AgencySequence").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                              </If>
                              <If sap2010:Annotation.AnnotationText="If the Agency Sequrnce is not availabel then get the sequence from the config file" Condition="[CurrentBots.Length&lt;=0 or String.IsNullOrWhiteSpace(BotPrefix)]" DisplayName="Default Data" sap:VirtualizedContainerService.HintSize="484,336" sap2010:WorkflowViewState.IdRef="If_49">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="MultipleAssign_12">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="s:String[]">[CurrentBots]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="s:String[]">[Split(JsonConfig("CurrentBots").ToString,",")]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[BotPrefix]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[JsonConfig("BotPrefix").ToString]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                </If.Then>
                              </If>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="530,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Error" Message="[&quot;Error in Data Confi File &quot;+vbNewLine+exception.Message]" />
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                        <If Condition="[String.IsNullOrWhiteSpace(SearchFor)]" DisplayName="Search For" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="If_31">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,291" sap2010:WorkflowViewState.IdRef="InputDialog_14" IsPassword="False" Label="Search" OptionsString="QA;UAT;Select Data" Title="Search For">
                              <ui:InputDialog.Result>
                                <OutArgument x:TypeArguments="x:String">[SearchFor]</OutArgument>
                              </ui:InputDialog.Result>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InputDialog>
                          </If.Then>
                        </If>
                        <If Condition="[String.IsNullOrWhiteSpace(Action)]" DisplayName="Activity" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="If_51">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,291" sap2010:WorkflowViewState.IdRef="InputDialog_18" IsPassword="False" OptionsString="Start;Restart" Title="Action">
                              <ui:InputDialog.Label>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:InputDialog.Label>
                              <ui:InputDialog.Result>
                                <OutArgument x:TypeArguments="x:String">[Action]</OutArgument>
                              </ui:InputDialog.Result>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InputDialog>
                          </If.Then>
                        </If>
                        <If Condition="[Action.Contains(&quot;Restart&quot;)]" DisplayName="IF Restart" sap:VirtualizedContainerService.HintSize="520,643" sap2010:WorkflowViewState.IdRef="If_52">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <If Condition="[NumberOfBots&lt;=0]" DisplayName="Number Of Bots" sap:VirtualizedContainerService.HintSize="484,467" sap2010:WorkflowViewState.IdRef="If_37">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,291" sap2010:WorkflowViewState.IdRef="InputDialog_15" IsPassword="False" Label="Bot" OptionsString="1;2;3;4;5;6;7;8;9;10" Title="Number Of Bots">
                                  <ui:InputDialog.Result>
                                    <OutArgument x:TypeArguments="x:Int32">[NumberOfBots]</OutArgument>
                                  </ui:InputDialog.Result>
                                </ui:InputDialog>
                              </If.Then>
                            </If>
                          </If.Then>
                        </If>
                        <aw:Launch_Browser BrowserTab="[BrowserTab]" DisplayName="Launch Browser" sap:VirtualizedContainerService.HintSize="520,22" sap2010:WorkflowViewState.IdRef="Launch_Browser_3" Url="[{JsonConfig(&quot;OrchestratorURL&quot;).ToString}]" />
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LoginORC workflow" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\LoginORC.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="UserName">[UserName]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="Password">[Password]</InArgument>
                            <InOutArgument x:TypeArguments="ui:Browser" x:Key="ORCBrowserTab">[BrowserTab]</InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="HomePage">Production</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Navigation workflow" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\Navigation.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="ui:Browser" x:Key="SDBrowser">[BrowserTab]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="HomePage" xml:space="preserve">Production </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="MainTab">Automations</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="SubTab">Jobs</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Apply Filter workflow" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_48" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\Apply Filter.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="SearchFor">[SearchFor]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="FilterStatus">Running</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="SelectFilter">State</InArgument>
                            <InArgument x:TypeArguments="ui:Browser" x:Key="ORCBrowserTab">[BrowserTab]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Check Bot workflow" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\Activity\Check Bot.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <OutArgument x:TypeArguments="x:Int32" x:Key="BotsCount" />
                            <InArgument x:TypeArguments="ui:Browser" x:Key="BrowserTab">[BrowserTab]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="Bots">[Bots]</OutArgument>
                            <InArgument x:TypeArguments="s:String[]" x:Key="CurrentBots">[CurrentBots]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="BotPrefix">[BotPrefix]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <Assign sap:VirtualizedContainerService.HintSize="520,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:String[]">[SplitBots]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:String[]">[Split(Bots,vbNewLine)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="520,51" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[SplitBots]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,365" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Trace" Message="[&quot;Searching Bot&quot;]" />
                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[ExceptionalBots]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="Bots" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="653,463" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If Condition="[item.Contains(Bots)]" sap:VirtualizedContainerService.HintSize="611,371" sap2010:WorkflowViewState.IdRef="If_39">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">[IsExist]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_4" />
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[IsExist]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ForEach>
                                <If Condition="[Not String.IsNullOrWhiteSpace(item)]" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_41">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <If Condition="[not IsExist and Not String.IsNullOrWhiteSpace(AgencySequence)]" sap:VirtualizedContainerService.HintSize="484,684" sap2010:WorkflowViewState.IdRef="If_40">
                                      <If.Then>
                                        <Sequence DisplayName="Navigate And Restart" sap:VirtualizedContainerService.HintSize="376,508" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Navigation workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_49" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\Navigation.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="ui:Browser" x:Key="SDBrowser">[BrowserTab]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="HomePage" xml:space="preserve">Production </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="MainTab">Automations</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="SubTab">Jobs</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Apply Filter workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_50" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\Apply Filter.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="SearchFor">[BotPrefix+item]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="FilterStatus">All</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="SelectFilter">State</InArgument>
                                              <InArgument x:TypeArguments="ui:Browser" x:Key="ORCBrowserTab">[BrowserTab]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Restart Bot workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="ORC/Activity/Restart Bot.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="ui:Browser" x:Key="SDBrowser">[BrowserTab]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="Action">Restart</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="AgencySequence">[AgencySequence]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="Bot">[BotPrefix+item]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Stop " sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Warn" Message="[&quot;No Bot Exist&quot;]" />
                                      <ui:Break sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Break_5" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                        <If Condition="[Action.Contains(&quot;Start&quot;)]" DisplayName="Check If Start " sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="If_53">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_7" />
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Check After Some Time" sap:VirtualizedContainerService.HintSize="839,687" sap2010:WorkflowViewState.IdRef="Sequence_46">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="797,91" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Trace" Message="[&quot;Closing the Browser&quot;]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:LogMessage>
                              <aw:Close_Browser BrowserTab="[BrowserTab]" DisplayName="Close Browser" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="Close_Browser_1" />
                              <If Condition="[Convert.ToInt32(Count)&lt;=NumberOfBots]" sap:VirtualizedContainerService.HintSize="797,402" sap2010:WorkflowViewState.IdRef="If_32">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Delay 5 Min" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Trace" Message="[&quot;Next Search Start will be at &quot;+(Convert.ToInt32(now.ToString(&quot;mm&quot;))+5).ToString]" />
                                    <Delay Duration="00:05:00" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Dilay 2 Min" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Trace" Message="[&quot;Next Search Start will be at &quot;+(Convert.ToInt32(now.ToString(&quot;mm&quot;))+2).ToString]" />
                                    <Delay Duration="00:02:00" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_4" />
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ui:InterruptibleDoWhile.Body>
                    <ui:InterruptibleDoWhile.Condition>
                      <Literal x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="Literal`1_1" Value="True" />
                    </ui:InterruptibleDoWhile.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InterruptibleDoWhile>
                  <Sequence x:Key="Trigger" DisplayName="Trigger Orc" sap:VirtualizedContainerService.HintSize="526,1576" sap2010:WorkflowViewState.IdRef="Sequence_39">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Default="63" Name="UploadPatientFile" />
                      <Variable x:TypeArguments="x:String" Default="70" Name="ParallelRun1" />
                      <Variable x:TypeArguments="x:String" Default="71" Name="ParallelRun2" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[String.IsNullOrWhiteSpace(TriggerName)]" sap:VirtualizedContainerService.HintSize="484,468" sap2010:WorkflowViewState.IdRef="If_47">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,291" sap2010:WorkflowViewState.IdRef="InputDialog_17" IsPassword="False" Label="Trigger Name" OptionsString="Parallel Run;Upload Patient File" Title="Trigger ORC">
                          <ui:InputDialog.Result>
                            <OutArgument x:TypeArguments="x:String">[TriggerName]</OutArgument>
                          </ui:InputDialog.Result>
                        </ui:InputDialog>
                      </If.Then>
                    </If>
                    <If Condition="[String.IsNullOrWhiteSpace(Password) Or String.IsNullOrWhiteSpace(UserName)]" DisplayName="Getting Credential Assert" sap:VirtualizedContainerService.HintSize="484,410" sap2010:WorkflowViewState.IdRef="If_48">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Assign Credential" sap:VirtualizedContainerService.HintSize="326,233" sap2010:WorkflowViewState.IdRef="Sequence_42">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="ORC Credential" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[SecuredPassword]" Username="[UserName]" />
                          <ac:SecuredString_To_String_Convertor DisplayName="SecuredString To String Convertor" sap:VirtualizedContainerService.HintSize="284,22" sap2010:WorkflowViewState.IdRef="SecuredString_To_String_Convertor_1" SecuredString="[SecuredPassword]" StringOutPut="[Password]" />
                        </Sequence>
                      </If.Then>
                    </If>
                    <aw:Launch_Browser BrowserTab="[BrowserTab]" DisplayName="Launch Browser" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="Launch_Browser_4" Url="[{JsonConfig(&quot;OrchestratorURL&quot;).ToString}]" />
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke LoginORC workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\LoginORC.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="UserName">[UserName]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Password">[Password]</InArgument>
                        <InOutArgument x:TypeArguments="ui:Browser" x:Key="ORCBrowserTab">[BrowserTab]</InOutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="HomePage" xml:space="preserve">Production </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Navigation workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\Navigation.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="ui:Browser" x:Key="SDBrowser">[BrowserTab]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="HomePage" xml:space="preserve">Production </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MainTab">Automations</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="SubTab">Triggers</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Apply Filter workflow" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\Apply Filter.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="SearchFor">Select Data</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="FilterStatus" />
                        <InArgument x:TypeArguments="x:String" x:Key="SelectFilter" />
                        <InArgument x:TypeArguments="ui:Browser" x:Key="ORCBrowserTab">[BrowserTab]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[TriggerName]" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="Switch`1_5">
                      <Switch.Default>
                        <Throw Exception="[new BusinessRuleException(&quot;Trigger Name Not Exist&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_6" />
                      </Switch.Default>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="Upload Patient File" DisplayName="Invoke Start Process workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\Activity\Start Process.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="ui:Browser" x:Key="ORCBrowserTab">[BrowserTab]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="TriggerNumber">[UploadPatientFile]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Sequence x:Key="Parallel Run" sap:VirtualizedContainerService.HintSize="376,508" sap2010:WorkflowViewState.IdRef="Sequence_40">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Start Process workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\Activity\Start Process.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="ui:Browser" x:Key="ORCBrowserTab">[BrowserTab]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="TriggerNumber">[ParallelRun1]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Apply Filter workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_55" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\Apply Filter.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="SearchFor">Select Data</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="FilterStatus" />
                            <InArgument x:TypeArguments="x:String" x:Key="SelectFilter" />
                            <InArgument x:TypeArguments="ui:Browser" x:Key="ORCBrowserTab">[BrowserTab]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Start Process workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Orc\Activity\Start Process.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="ui:Browser" x:Key="ORCBrowserTab">[BrowserTab]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="TriggerNumber">[ParallelRun2]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </Switch>
                  </Sequence>
                </Switch>
                <aw:Close_Browser BrowserTab="[BrowserTab]" DisplayName="Close Browser" sap:VirtualizedContainerService.HintSize="497,22" sap2010:WorkflowViewState.IdRef="Close_Browser_2" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Throw Exception="[new Exception(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
            </If.Else>
          </If>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="784,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[&quot;Support Process Ended &quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="830,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Exception Handling" sap:VirtualizedContainerService.HintSize="755,369" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[String.IsNullOrWhiteSpace(exception.Message)]" sap:VirtualizedContainerService.HintSize="713,249" sap2010:WorkflowViewState.IdRef="If_21">
                <If.Then>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Stopped From Orchestrator&quot;]" />
                </If.Then>
                <If.Else>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[exception.Source+ vbNewLine +exception.Message]" />
                </If.Else>
              </If>
              <aa:Voice_Assistant DisplayName="Voice Assistant" sap:VirtualizedContainerService.HintSize="713,22" sap2010:WorkflowViewState.IdRef="Voice_Assistant_1" Text="[exception.Message]" Volume="100" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>